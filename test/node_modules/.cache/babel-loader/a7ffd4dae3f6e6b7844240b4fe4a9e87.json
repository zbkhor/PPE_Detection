{"remainingRequest":"C:\\tfjsexmaple\\tfjs-vue-example\\node_modules\\babel-loader\\lib\\index.js!C:\\tfjsexmaple\\tfjs-vue-example\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\tfjsexmaple\\tfjs-vue-example\\src\\utilities.js","dependencies":[{"path":"C:\\tfjsexmaple\\tfjs-vue-example\\src\\utilities.js","mtime":1657177117374},{"path":"C:\\tfjsexmaple\\tfjs-vue-example\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657169709851},{"path":"C:\\tfjsexmaple\\tfjs-vue-example\\node_modules\\babel-loader\\lib\\index.js","mtime":1657169710845},{"path":"C:\\tfjsexmaple\\tfjs-vue-example\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1657170869308}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _slicedToArray from \"C:\\\\tfjsexmaple\\\\tfjs-vue-example\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/slicedToArray\";\n// Define our labelmap\nvar labelMap = {\n  1: {\n    name: 'person without helmet',\n    color: 'orange'\n  },\n  2: {\n    name: 'person with helmet',\n    color: 'green'\n  } // Define a drawing function\n\n};\nexport var drawRect = function drawRect(boxes, classes, scores, threshold, imgWidth, imgHeight, ctx) {\n  for (var i = 0; i <= boxes.length; i++) {\n    if (boxes[i] && classes[i] && scores[i] > threshold) {\n      // Extract variables\n      var _boxes$i = _slicedToArray(boxes[i], 4),\n          y = _boxes$i[0],\n          x = _boxes$i[1],\n          height = _boxes$i[2],\n          width = _boxes$i[3];\n\n      var text = classes[i]; // Set styling\n\n      ctx.strokeStyle = labelMap[text]['color'];\n      ctx.lineWidth = 10;\n      ctx.fillStyle = 'white';\n      ctx.font = '30px Arial'; // DRAW!!\n\n      ctx.beginPath();\n      ctx.fillText(labelMap[text]['name'] + ' - ' + Math.round(scores[i] * 100) / 100, x * imgWidth, y * imgHeight - 10);\n      ctx.rect(x * imgWidth, y * imgHeight, width * imgWidth / 2, height * imgHeight / 1.5);\n      ctx.stroke();\n    }\n  }\n};",{"version":3,"sources":["C:\\tfjsexmaple\\tfjs-vue-example\\src\\utilities.js"],"names":["labelMap","name","color","drawRect","boxes","classes","scores","threshold","imgWidth","imgHeight","ctx","i","length","y","x","height","width","text","strokeStyle","lineWidth","fillStyle","font","beginPath","fillText","Math","round","rect","stroke"],"mappings":";;AAAA;AACA,IAAMA,QAAQ,GAAG;AACb,KAAE;AAACC,IAAAA,IAAI,EAAC,uBAAN;AAA+BC,IAAAA,KAAK,EAAC;AAArC,GADW;AAEb,KAAE;AAACD,IAAAA,IAAI,EAAC,oBAAN;AAA4BC,IAAAA,KAAK,EAAC;AAAlC,GAFW,CAMjB;;AANiB,CAAjB;AAOA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAQC,OAAR,EAAiBC,MAAjB,EAAyBC,SAAzB,EAAoCC,QAApC,EAA8CC,SAA9C,EAAyDC,GAAzD,EAA+D;AACnF,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,IAAEP,KAAK,CAACQ,MAAtB,EAA8BD,CAAC,EAA/B,EAAkC;AAC9B,QAAGP,KAAK,CAACO,CAAD,CAAL,IAAYN,OAAO,CAACM,CAAD,CAAnB,IAA0BL,MAAM,CAACK,CAAD,CAAN,GAAUJ,SAAvC,EAAiD;AAC7C;AAD6C,oCAElBH,KAAK,CAACO,CAAD,CAFa;AAAA,UAEtCE,CAFsC;AAAA,UAEpCC,CAFoC;AAAA,UAElCC,MAFkC;AAAA,UAE3BC,KAF2B;;AAG7C,UAAMC,IAAI,GAAGZ,OAAO,CAACM,CAAD,CAApB,CAH6C,CAK7C;;AACAD,MAAAA,GAAG,CAACQ,WAAJ,GAAkBlB,QAAQ,CAACiB,IAAD,CAAR,CAAe,OAAf,CAAlB;AACAP,MAAAA,GAAG,CAACS,SAAJ,GAAgB,EAAhB;AACAT,MAAAA,GAAG,CAACU,SAAJ,GAAgB,OAAhB;AACAV,MAAAA,GAAG,CAACW,IAAJ,GAAW,YAAX,CAT6C,CAW7C;;AACAX,MAAAA,GAAG,CAACY,SAAJ;AACAZ,MAAAA,GAAG,CAACa,QAAJ,CAAavB,QAAQ,CAACiB,IAAD,CAAR,CAAe,MAAf,IAAyB,KAAzB,GAAiCO,IAAI,CAACC,KAAL,CAAWnB,MAAM,CAACK,CAAD,CAAN,GAAU,GAArB,IAA0B,GAAxE,EAA6EG,CAAC,GAACN,QAA/E,EAAyFK,CAAC,GAACJ,SAAF,GAAY,EAArG;AACAC,MAAAA,GAAG,CAACgB,IAAJ,CAASZ,CAAC,GAACN,QAAX,EAAqBK,CAAC,GAACJ,SAAvB,EAAkCO,KAAK,GAACR,QAAN,GAAe,CAAjD,EAAoDO,MAAM,GAACN,SAAP,GAAiB,GAArE;AACAC,MAAAA,GAAG,CAACiB,MAAJ;AACH;AACJ;AACJ,CApBM","sourcesContent":["// Define our labelmap\r\nconst labelMap = {\r\n    1:{name:'person without helmet', color:'orange'},\r\n    2:{name:'person with helmet', color:'green'},\r\n\r\n}\r\n\r\n// Define a drawing function\r\nexport const drawRect = (boxes, classes, scores, threshold, imgWidth, imgHeight, ctx)=>{\r\n    for(let i=0; i<=boxes.length; i++){\r\n        if(boxes[i] && classes[i] && scores[i]>threshold){\r\n            // Extract variables\r\n            const [y,x,height,width] = boxes[i]\r\n            const text = classes[i]\r\n            \r\n            // Set styling\r\n            ctx.strokeStyle = labelMap[text]['color']\r\n            ctx.lineWidth = 10\r\n            ctx.fillStyle = 'white'\r\n            ctx.font = '30px Arial'         \r\n            \r\n            // DRAW!!\r\n            ctx.beginPath()\r\n            ctx.fillText(labelMap[text]['name'] + ' - ' + Math.round(scores[i]*100)/100, x*imgWidth, y*imgHeight-10)\r\n            ctx.rect(x*imgWidth, y*imgHeight, width*imgWidth/2, height*imgHeight/1.5);\r\n            ctx.stroke()\r\n        }\r\n    }\r\n}"]}]}