{"version":3,"sources":["webpack:///./src/views/Test.vue?bef5","webpack:///./src/components/test/CameraSelection.vue?542a","webpack:///src/components/test/CameraSelection.vue","webpack:///./src/components/test/CameraSelection.vue?b046","webpack:///./src/components/test/CameraSelection.vue","webpack:///src/views/Test.vue","webpack:///./src/views/Test.vue?cdd1","webpack:///./src/views/Test.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","staticRenderFns","staticClass","_v","class","videoOn","myVideoSources","on","changeMedia","model","value","callback","$$v","selectedVideoSource","expression","style","toggleColor","toggleCamera","_s","cameraBtnTxt","ref","component","VBtn","VCard","VCardSubtitle","VCardTitle","VSelect","VCol","VContainer","VRow"],"mappings":"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","file":"js/chunk-2d0d7fc5.73112b95.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',{attrs:{\"fluid\":\"\"}},[_c('v-row',[_c('v-col',{attrs:{\"cols\":\"3\"}},[_c('camera-selection')],1),_c('v-col',{attrs:{\"cols\":\"4\"}},[_c('test-camera')],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-card',{staticClass:\"mx-auto\",attrs:{\"max-width\":\"100%\"}},[_c('v-card-title',[_c('span',[_vm._v(\"Camera Selection\")])]),_c('v-card-subtitle',[_c('span',{staticClass:\"font-weight-light grey--text text--darken-2\"},[_vm._v(\"Shows all cameras available.\")])]),_c('v-select',{staticClass:\"videoSourceSelect mr-6\",class:_vm.videoOn ? 'videoEnabled' : 'videoDisabled',attrs:{\"items\":_vm.myVideoSources,\"item-text\":\"deviceName\",\"item-value\":\"deviceId\",\"label\":\"Select Camera\",\"dense\":\"\",\"outlined\":\"\",\"disabled\":!_vm.videoOn},on:{\"change\":_vm.changeMedia},model:{value:(_vm.selectedVideoSource),callback:function ($$v) {_vm.selectedVideoSource=$$v},expression:\"selectedVideoSource\"}}),_c('v-btn',{staticClass:\"white--text\",style:({ 'background-color': _vm.toggleColor }),on:{\"click\":_vm.toggleCamera}},[_vm._v(\" \"+_vm._s(_vm.cameraBtnTxt)+\" \")]),_c('div',{attrs:{\"id\":\"camera\"}},[_c('video',{ref:\"video\",attrs:{\"id\":\"video\",\"autoplay\":\"\"}})])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\r\n    Author: Li Xinyi\r\n    Date Written: 6/10/2020\r\n-->\r\n<template>\r\n    <v-card class=\"mx-auto\" max-width=\"100%\">\r\n        <v-card-title>\r\n            <span>Camera Selection</span>\r\n        </v-card-title>\r\n        <v-card-subtitle>\r\n            <span class=\"font-weight-light grey--text text--darken-2\"\r\n                >Shows all cameras available.</span\r\n            >\r\n        </v-card-subtitle>\r\n        <!-- <v-treeview\r\n            open-all\r\n            v-model=\"selectedVideoSource\"\r\n            :items=\"myVideoSources\"\r\n            item-text=\"deviceName\"\r\n            item-value=\"deviceId\"\r\n            label=\"Select Camera\"\r\n            dense\r\n            outlined\r\n            class=\"videoSourceSelect mr-6\"\r\n            @change=\"changeMedia\"\r\n            :disabled=\"!videoOn\"\r\n            :class=\"videoOn ? 'videoEnabled' : 'videoDisabled'\"\r\n        ></v-treeview> -->\r\n        <v-select\r\n            v-model=\"selectedVideoSource\"\r\n            :items=\"myVideoSources\"\r\n            item-text=\"deviceName\"\r\n            item-value=\"deviceId\"\r\n            label=\"Select Camera\"\r\n            dense\r\n            outlined\r\n            class=\"videoSourceSelect mr-6\"\r\n            @change=\"changeMedia\"\r\n            :disabled=\"!videoOn\"\r\n            :class=\"videoOn ? 'videoEnabled' : 'videoDisabled'\"\r\n        >\r\n        </v-select>\r\n        <v-btn\r\n            class=\"white--text\"\r\n            @click=\"toggleCamera\"\r\n            :style=\"{ 'background-color': toggleColor }\"\r\n        >\r\n            {{ cameraBtnTxt }}\r\n        </v-btn>\r\n        <div id=\"camera\">\r\n            <video id=\"video\" ref=\"video\" autoplay></video>\r\n        </div>\r\n    </v-card>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'CameraSelection',\r\n\r\n    data: function() {\r\n        return {\r\n            CameraSources: null,\r\n            defaultConstraints: {\r\n                video: {\r\n                    width: { ideal: 1920 },\r\n                    height: { ideal: 1080 },\r\n                    frameRate: { ideal: 30 },\r\n                },\r\n            },\r\n        };\r\n    },\r\n\r\n    mounted() {\r\n        this.video = this.$refs.video;\r\n    },\r\n\r\n    methods: {\r\n        //Get all media devices (Video) that is connected to the user's computer\r\n        getDevices(deviceInfos) {\r\n            console.log('getDevices: true');\r\n            //console.log('deviceInfos: ' + JSON.stringify(deviceInfos));\r\n            let videoSources = [];\r\n            //console.log(JSON.stringify(deviceInfos));\r\n            // Get media sources (Video)\r\n            // Handles being called several times to update labels. Preserve values.\r\n            const values = [this.selectedVideoSource];\r\n            // Populate media source lists with their respective media sources\r\n            for (let i = 0; i !== deviceInfos.length; ++i) {\r\n                const deviceInfo = deviceInfos[i];\r\n                let device = {};\r\n                device.deviceId = deviceInfo.deviceId;\r\n                if (deviceInfo.kind === 'videoinput') {\r\n                    //Video Input device\r\n                    device.deviceName =\r\n                        deviceInfo.label || `camera ${videoSources.length + 1}`;\r\n                    videoSources.push(device);\r\n                } else {\r\n                    console.log(\r\n                        'Some other kind of source/device: ',\r\n                        deviceInfo\r\n                    );\r\n                }\r\n                // Set lists for v-select items prop\r\n                this.myVideoSources = videoSources;\r\n                // Set selected value for v-select\r\n                // Set to previous id if exists\r\n                // else set to first one\r\n                let sources = [videoSources];\r\n                sources.forEach((source, index) => {\r\n                    //If the current selected source is present in the new list of sources,\r\n                    //the selected source will remain, i.e. not changed.\r\n                    if (source.some((x) => x.deviceId === values[index])) {\r\n                        switch (index) {\r\n                            case 0:\r\n                                this.selectedVideoSource = values[index];\r\n                                break;\r\n                        }\r\n                    }\r\n                    //else if there is at least one source in the list,\r\n                    //the selected source is the first source in the list.\r\n                    else if (source.length > 0) {\r\n                        switch (index) {\r\n                            case 0:\r\n                                this.selectedVideoSource =\r\n                                    videoSources[0].deviceId;\r\n                                break;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        //Get user media using constraints\r\n        getMedia(constraints) {\r\n            console.log('getMedia: true');\r\n\r\n            //Clear video\r\n            if (this.stream != null) {\r\n                this.stream.getVideoTracks()[0].stop();\r\n\r\n                this.video.srcObject = null;\r\n            }\r\n\r\n            //Add media source to use to resolution constraints\r\n            const videoSource = this.selectedVideoSource;\r\n            console.log(JSON.stringify(videoSource));\r\n            constraints.video.deviceId = videoSource\r\n                ? { exact: videoSource }\r\n                : undefined;\r\n            //console.log(JSON.stringify(constraints));\r\n            navigator.mediaDevices\r\n                .getUserMedia(constraints)\r\n                .then(this.gotStream)\r\n                .then((deviceInfos) => {\r\n                    this.getDevices(deviceInfos);\r\n                })\r\n                .then(this.resolveVideo)\r\n                .catch(this.handleError);\r\n        },\r\n\r\n        //Assign the stream to the video element\r\n        gotStream(mediaStream) {\r\n            console.log('gotStream: true');\r\n            this.stream = window.stream = mediaStream;\r\n            this.video.srcObject = mediaStream;\r\n            this.track = mediaStream.getVideoTracks()[0];\r\n            return navigator.mediaDevices.enumerateDevices();\r\n        },\r\n\r\n        //Ensure that the video is playing\r\n        resolveVideo() {\r\n            console.log('resolveVideo: true');\r\n            return new Promise((resolve) => (this.video.onplaying = resolve));\r\n        },\r\n\r\n        //Error Handling\r\n        handleError(error) {\r\n            console.log(\r\n                'navigator.MediaDevices.getUserMedia error: ',\r\n                error.message,\r\n                error.name\r\n            );\r\n        },\r\n\r\n        changeMedia() {\r\n            this.getMedia(this.defaultConstraints);\r\n        },\r\n\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CameraSelection.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CameraSelection.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CameraSelection.vue?vue&type=template&id=e790c788&\"\nimport script from \"./CameraSelection.vue?vue&type=script&lang=js&\"\nexport * from \"./CameraSelection.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardSubtitle } from 'vuetify/lib/components/VCard';\nimport { VCardTitle } from 'vuetify/lib/components/VCard';\nimport { VSelect } from 'vuetify/lib/components/VSelect';\ninstallComponents(component, {VBtn,VCard,VCardSubtitle,VCardTitle,VSelect})\n","<!--\r\n    Author: Li Xinyi\r\n    Date Written: 6/10/2021\r\n-->\r\n<template>\r\n    <v-container fluid>\r\n        <v-row>\r\n            <v-col cols=\"3\">\r\n                <camera-selection></camera-selection>\r\n            </v-col>\r\n            <v-col cols=\"4\">\r\n                <test-camera></test-camera>\r\n            </v-col>\r\n        </v-row>\r\n        \r\n    </v-container>\r\n</template>\r\n\r\n<script>\r\n// import Treeview from '@/components/test/Treeview';\r\nimport CameraSelection from '@/components/test/CameraSelection';\r\n// import TestCamera from '@/components/test/TestCamera';\r\n// import TestLogs from '@/components/test/TestLogs';\r\n\r\nexport default {\r\n    name: 'Test',\r\n    \r\n    components: {\r\n        // Treeview,\r\n        CameraSelection,\r\n        // TestCamera,\r\n        // TestLogs,\r\n    },\r\n\r\n};\r\n</script>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Test.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Test.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Test.vue?vue&type=template&id=5658f226&\"\nimport script from \"./Test.vue?vue&type=script&lang=js&\"\nexport * from \"./Test.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VRow } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VCol,VContainer,VRow})\n"],"sourceRoot":""}