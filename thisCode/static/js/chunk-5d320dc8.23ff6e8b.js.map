{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.set.js","webpack:///./src/views/Test.vue?1223","webpack:///./src/components/test/Treeview.vue?b530","webpack:///src/components/test/Treeview.vue","webpack:///./src/components/test/Treeview.vue?b384","webpack:///../../../src/components/VTreeview/VTreeviewNode.ts","webpack:///../../../../src/components/VTreeview/util/filterTreeItems.ts","webpack:///../../../src/components/VTreeview/VTreeview.ts","webpack:///./src/components/test/Treeview.vue","webpack:///src/views/Test.vue","webpack:///./src/views/Test.vue?cdd1","webpack:///./src/views/Test.vue","webpack:///./node_modules/core-js/modules/es.string.search.js"],"names":["collection","collectionStrong","module","exports","init","this","arguments","length","undefined","_vm","_h","$createElement","_c","_self","staticRenderFns","attrs","items","baseMixins","mixins","VTreeviewNodeProps","activatable","activeClass","type","default","color","expandIcon","indeterminateIcon","itemChildren","itemDisabled","itemKey","itemText","loadChildren","loadingIcon","offIcon","onIcon","openOnClick","rounded","selectable","selectedColor","shaped","transition","selectionType","validator","v","includes","VTreeviewNode","name","inject","treeview","props","level","item","parentIsDisabled","data","hasLoaded","isActive","isIndeterminate","isLoading","isOpen","isSelected","computed","disabled","key","children","child","text","scopedProps","leaf","selected","indeterminate","active","open","computedIcon","hasChildren","created","beforeDestroy","methods","checkChildren","Promise","resolve","genLabel","$scopedSlots","label","slot","staticClass","genPrependSlot","prepend","genAppendSlot","append","genContent","genToggle","VIcon","class","on","click","e","genCheckbox","genLevel","genNode","setTextColor","genChild","scopedSlots","genChildrenWrapper","map","c","genTransition","render","h","String","search","filter","match","i","filterTreeItems","excluded","provide","dense","hoverable","multipleActive","openAll","returnObject","value","activeCache","nodes","openCache","selectedCache","Set","excludedItems","watch","handler","oldKeys","Object","k","newKeys","getKeys","diff","oldSelectedCache","emitSelected","deep","getValue","mounted","$slots","console","updateAll","keys","buildTree","parent","oldNode","hasOwnProperty","vnode","node","calculateState","add","state","counts","Boolean","emitOpen","emitActive","emitNodeCache","handleNodeCacheWatcher","old","updateFn","emitFn","getDescendants","descendants","getParents","parents","register","unregister","isParent","updateActive","delete","updateSelected","isForced","changed","descendant","calculated","updateOpen","updateVnodeState","isExcluded","has","themeClasses","component","VTreeview","fixRegExpWellKnownSymbolLogic","anObject","requireObjectCoercible","sameValue","regExpExec","SEARCH","nativeSearch","maybeCallNative","regexp","O","searcher","call","RegExp","res","done","rx","S","previousLastIndex","lastIndex","result","index"],"mappings":"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","file":"js/chunk-5d320dc8.23ff6e8b.js","sourcesContent":["'use strict';\nvar collection = require('../internals/collection');\nvar collectionStrong = require('../internals/collection-strong');\n\n// `Set` constructor\n// https://tc39.github.io/ecma262/#sec-set-objects\nmodule.exports = collection('Set', function (init) {\n  return function Set() { return init(this, arguments.length ? arguments[0] : undefined); };\n}, collectionStrong);\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('treeview')}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-treeview',{attrs:{\"open-all\":\"\",\"items\":_vm.items}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <v-treeview\r\n  open-all\r\n    :items=\"items\"\r\n  ></v-treeview>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    data: () => ({\r\n      items: [\r\n        {\r\n          id: 1,\r\n          name: 'Pantry',\r\n          children: [\r\n            { id: 2, name: 'Cam 1 ' },\r\n            { id: 3, name: 'Cam 2 ' },\r\n            { id: 4, name: 'Cam 3 ' },\r\n          ],\r\n        },\r\n        {\r\n          id: 5,\r\n          name: 'Site 1',\r\n          children: [\r\n            {\r\n              id: 6,\r\n              name: 'Cam 1 ',\r\n            },\r\n            {\r\n              id: 10,\r\n              name: 'Cam 2'\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          id: 15,\r\n          name: 'Site 2',\r\n          children: [\r\n            { id: 16, name: 'Cam 1' },\r\n            { id: 17, name: 'Cam 2' },\r\n            { id: 18, name: 'Cam 3' },\r\n          ],\r\n        },\r\n        {\r\n          id: 19,\r\n          name: 'Main Entrance',\r\n          children: [\r\n            {\r\n              id: 20,\r\n              name: 'Cam 1',\r\n            },\r\n            { id: 24, name: 'Cam 2' },\r\n            { id: 25, name: 'Cam 3' },\r\n          ],\r\n        },\r\n      ],\r\n    }),\r\n  }\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Treeview.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Treeview.vue?vue&type=script&lang=js&\"","// Components\nimport { VExpandTransition } from '../transitions'\nimport { VIcon } from '../VIcon'\nimport VTreeview from './VTreeview'\n\n// Mixins\nimport { inject as RegistrableInject } from '../../mixins/registrable'\nimport Colorable from '../../mixins/colorable'\n\n// Utils\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { getObjectValueByPath, createRange } from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeChildren, PropType } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\ntype VTreeViewInstance = InstanceType<typeof VTreeview>\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject('treeview')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  treeview: VTreeViewInstance\n}\n\nexport const VTreeviewNodeProps = {\n  activatable: Boolean,\n  activeClass: {\n    type: String,\n    default: 'v-treeview-node--active',\n  },\n  color: {\n    type: String,\n    default: 'primary',\n  },\n  expandIcon: {\n    type: String,\n    default: '$subgroup',\n  },\n  indeterminateIcon: {\n    type: String,\n    default: '$checkboxIndeterminate',\n  },\n  itemChildren: {\n    type: String,\n    default: 'children',\n  },\n  itemDisabled: {\n    type: String,\n    default: 'disabled',\n  },\n  itemKey: {\n    type: String,\n    default: 'id',\n  },\n  itemText: {\n    type: String,\n    default: 'name',\n  },\n  loadChildren: Function as PropType<(item: any) => Promise<void>>,\n  loadingIcon: {\n    type: String,\n    default: '$loading',\n  },\n  offIcon: {\n    type: String,\n    default: '$checkboxOff',\n  },\n  onIcon: {\n    type: String,\n    default: '$checkboxOn',\n  },\n  openOnClick: Boolean,\n  rounded: Boolean,\n  selectable: Boolean,\n  selectedColor: {\n    type: String,\n    default: 'accent',\n  },\n  shaped: Boolean,\n  transition: Boolean,\n  selectionType: {\n    type: String as PropType<'leaf' | 'independent'>,\n    default: 'leaf',\n    validator: (v: string) => ['leaf', 'independent'].includes(v),\n  },\n}\n\n/* @vue/component */\nconst VTreeviewNode = baseMixins.extend<options>().extend({\n  name: 'v-treeview-node',\n\n  inject: {\n    treeview: {\n      default: null,\n    },\n  },\n\n  props: {\n    level: Number,\n    item: {\n      type: Object,\n      default: () => null,\n    } as PropValidator<Record<string, unknown> | null>,\n    parentIsDisabled: Boolean,\n    ...VTreeviewNodeProps,\n  },\n\n  data: () => ({\n    hasLoaded: false,\n    isActive: false, // Node is selected (row)\n    isIndeterminate: false, // Node has at least one selected child\n    isLoading: false,\n    isOpen: false, // Node is open/expanded\n    isSelected: false, // Node is selected (checkbox)\n  }),\n\n  computed: {\n    disabled (): boolean {\n      return (\n        getObjectValueByPath(this.item, this.itemDisabled) ||\n        (this.parentIsDisabled && this.selectionType === 'leaf')\n      )\n    },\n    key (): string {\n      return getObjectValueByPath(this.item, this.itemKey)\n    },\n    children (): any[] | null {\n      const children = getObjectValueByPath(this.item, this.itemChildren)\n      return children && children.filter((child: any) => !this.treeview.isExcluded(getObjectValueByPath(child, this.itemKey)))\n    },\n    text (): string {\n      return getObjectValueByPath(this.item, this.itemText)\n    },\n    scopedProps (): object {\n      return {\n        item: this.item,\n        leaf: !this.children,\n        selected: this.isSelected,\n        indeterminate: this.isIndeterminate,\n        active: this.isActive,\n        open: this.isOpen,\n      }\n    },\n    computedIcon (): string {\n      if (this.isIndeterminate) return this.indeterminateIcon\n      else if (this.isSelected) return this.onIcon\n      else return this.offIcon\n    },\n    hasChildren (): boolean {\n      return !!this.children && (!!this.children.length || !!this.loadChildren)\n    },\n  },\n\n  created () {\n    this.treeview.register(this)\n  },\n\n  beforeDestroy () {\n    this.treeview.unregister(this)\n  },\n\n  methods: {\n    checkChildren (): Promise<void> {\n      return new Promise<void>(resolve => {\n        // TODO: Potential issue with always trying\n        // to load children if response is empty?\n        if (!this.children || this.children.length || !this.loadChildren || this.hasLoaded) return resolve()\n\n        this.isLoading = true\n        resolve(this.loadChildren(this.item))\n      }).then(() => {\n        this.isLoading = false\n        this.hasLoaded = true\n      })\n    },\n    open () {\n      this.isOpen = !this.isOpen\n      this.treeview.updateOpen(this.key, this.isOpen)\n      this.treeview.emitOpen()\n    },\n    genLabel () {\n      const children = []\n\n      if (this.$scopedSlots.label) children.push(this.$scopedSlots.label(this.scopedProps))\n      else children.push(this.text)\n\n      return this.$createElement('div', {\n        slot: 'label',\n        staticClass: 'v-treeview-node__label',\n      }, children)\n    },\n    genPrependSlot () {\n      if (!this.$scopedSlots.prepend) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__prepend',\n      }, this.$scopedSlots.prepend(this.scopedProps))\n    },\n    genAppendSlot () {\n      if (!this.$scopedSlots.append) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__append',\n      }, this.$scopedSlots.append(this.scopedProps))\n    },\n    genContent () {\n      const children = [\n        this.genPrependSlot(),\n        this.genLabel(),\n        this.genAppendSlot(),\n      ]\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__content',\n      }, children)\n    },\n    genToggle () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__toggle',\n        class: {\n          'v-treeview-node__toggle--open': this.isOpen,\n          'v-treeview-node__toggle--loading': this.isLoading,\n        },\n        slot: 'prepend',\n        on: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n\n            if (this.isLoading) return\n\n            this.checkChildren().then(() => this.open())\n          },\n        },\n      }, [this.isLoading ? this.loadingIcon : this.expandIcon])\n    },\n    genCheckbox () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__checkbox',\n        props: {\n          color: this.isSelected || this.isIndeterminate ? this.selectedColor : undefined,\n          disabled: this.disabled,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n\n            if (this.isLoading) return\n\n            this.checkChildren().then(() => {\n              // We nextTick here so that items watch in VTreeview has a chance to run first\n              this.$nextTick(() => {\n                this.isSelected = !this.isSelected\n                this.isIndeterminate = false\n\n                this.treeview.updateSelected(this.key, this.isSelected)\n                this.treeview.emitSelected()\n              })\n            })\n          },\n        },\n      }, [this.computedIcon])\n    },\n    genLevel (level: number) {\n      return createRange(level).map(() => this.$createElement('div', {\n        staticClass: 'v-treeview-node__level',\n      }))\n    },\n    genNode () {\n      const children = [this.genContent()]\n\n      if (this.selectable) children.unshift(this.genCheckbox())\n\n      if (this.hasChildren) {\n        children.unshift(this.genToggle())\n      } else {\n        children.unshift(...this.genLevel(1))\n      }\n\n      children.unshift(...this.genLevel(this.level))\n\n      return this.$createElement('div', this.setTextColor(this.isActive && this.color, {\n        staticClass: 'v-treeview-node__root',\n        class: {\n          [this.activeClass]: this.isActive,\n        },\n        on: {\n          click: () => {\n            if (this.openOnClick && this.hasChildren) {\n              this.checkChildren().then(this.open)\n            } else if (this.activatable && !this.disabled) {\n              this.isActive = !this.isActive\n              this.treeview.updateActive(this.key, this.isActive)\n              this.treeview.emitActive()\n            }\n          },\n        },\n      }), children)\n    },\n    genChild (item: any, parentIsDisabled: boolean) {\n      return this.$createElement(VTreeviewNode, {\n        key: getObjectValueByPath(item, this.itemKey),\n        props: {\n          activatable: this.activatable,\n          activeClass: this.activeClass,\n          item,\n          selectable: this.selectable,\n          selectedColor: this.selectedColor,\n          color: this.color,\n          expandIcon: this.expandIcon,\n          indeterminateIcon: this.indeterminateIcon,\n          offIcon: this.offIcon,\n          onIcon: this.onIcon,\n          loadingIcon: this.loadingIcon,\n          itemKey: this.itemKey,\n          itemText: this.itemText,\n          itemDisabled: this.itemDisabled,\n          itemChildren: this.itemChildren,\n          loadChildren: this.loadChildren,\n          transition: this.transition,\n          openOnClick: this.openOnClick,\n          rounded: this.rounded,\n          shaped: this.shaped,\n          level: this.level + 1,\n          selectionType: this.selectionType,\n          parentIsDisabled,\n        },\n        scopedSlots: this.$scopedSlots,\n      })\n    },\n    genChildrenWrapper () {\n      if (!this.isOpen || !this.children) return null\n\n      const children = [this.children.map(c => this.genChild(c, this.disabled))]\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__children',\n      }, children)\n    },\n    genTransition () {\n      return this.$createElement(VExpandTransition, [this.genChildrenWrapper()])\n    },\n  },\n\n  render (h): VNode {\n    const children: VNodeChildren = [this.genNode()]\n\n    if (this.transition) children.push(this.genTransition())\n    else children.push(this.genChildrenWrapper())\n\n    return h('div', {\n      staticClass: 'v-treeview-node',\n      class: {\n        'v-treeview-node--leaf': !this.hasChildren,\n        'v-treeview-node--click': this.openOnClick,\n        'v-treeview-node--disabled': this.disabled,\n        'v-treeview-node--rounded': this.rounded,\n        'v-treeview-node--shaped': this.shaped,\n        'v-treeview-node--selected': this.isSelected,\n      },\n      attrs: {\n        'aria-expanded': String(this.isOpen),\n      },\n    }, children)\n  },\n})\n\nexport default VTreeviewNode\n","import { getObjectValueByPath } from '../../../util/helpers'\nimport { TreeviewItemFunction } from 'vuetify/types'\n\nexport function filterTreeItem (item: object, search: string, textKey: string): boolean {\n  const text = getObjectValueByPath(item, textKey)\n\n  return text.toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) > -1\n}\n\nexport function filterTreeItems (\n  filter: TreeviewItemFunction,\n  item: any,\n  search: string,\n  idKey: string,\n  textKey: string,\n  childrenKey: string,\n  excluded: Set<string | number>\n): boolean {\n  if (filter(item, search, textKey)) {\n    return true\n  }\n\n  const children = getObjectValueByPath(item, childrenKey)\n\n  if (children) {\n    let match = false\n    for (let i = 0; i < children.length; i++) {\n      if (filterTreeItems(filter, children[i], search, idKey, textKey, childrenKey, excluded)) {\n        match = true\n      }\n    }\n\n    if (match) return true\n  }\n\n  excluded.add(getObjectValueByPath(item, idKey))\n\n  return false\n}\n","// Styles\nimport './VTreeview.sass'\n\n// Types\nimport { VNode, VNodeChildrenArrayContents, PropType } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { TreeviewItemFunction } from 'vuetify/types'\n\n// Components\nimport VTreeviewNode, { VTreeviewNodeProps } from './VTreeviewNode'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utils\nimport {\n  arrayDiff,\n  deepEqual,\n  getObjectValueByPath,\n} from '../../util/helpers'\nimport mixins from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\nimport {\n  filterTreeItems,\n  filterTreeItem,\n} from './util/filterTreeItems'\n\ntype VTreeviewNodeInstance = InstanceType<typeof VTreeviewNode>\n\ntype NodeCache = Set<string | number>\ntype NodeArray = (string | number)[]\n\ntype NodeState = {\n  parent: number | string | null\n  children: (number | string)[]\n  vnode: VTreeviewNodeInstance | null\n  isActive: boolean\n  isSelected: boolean\n  isIndeterminate: boolean\n  isOpen: boolean\n  item: any\n}\n\nexport default mixins(\n  RegistrableProvide('treeview'),\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-treeview',\n\n  provide (): object {\n    return { treeview: this }\n  },\n\n  props: {\n    active: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<NodeArray>,\n    dense: Boolean,\n    filter: Function as PropType<TreeviewItemFunction>,\n    hoverable: Boolean,\n    items: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<any[]>,\n    multipleActive: Boolean,\n    open: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<NodeArray>,\n    openAll: Boolean,\n    returnObject: {\n      type: Boolean,\n      default: false, // TODO: Should be true in next major\n    },\n    search: String,\n    value: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<NodeArray>,\n    ...VTreeviewNodeProps,\n  },\n\n  data: () => ({\n    level: -1,\n    activeCache: new Set() as NodeCache,\n    nodes: {} as Record<string | number, NodeState>,\n    openCache: new Set() as NodeCache,\n    selectedCache: new Set() as NodeCache,\n  }),\n\n  computed: {\n    excludedItems (): Set<string | number> {\n      const excluded = new Set<string|number>()\n\n      if (!this.search) return excluded\n\n      for (let i = 0; i < this.items.length; i++) {\n        filterTreeItems(\n          this.filter || filterTreeItem,\n          this.items[i],\n          this.search,\n          this.itemKey,\n          this.itemText,\n          this.itemChildren,\n          excluded\n        )\n      }\n\n      return excluded\n    },\n  },\n\n  watch: {\n    items: {\n      handler () {\n        const oldKeys = Object.keys(this.nodes).map(k => getObjectValueByPath(this.nodes[k].item, this.itemKey))\n        const newKeys = this.getKeys(this.items)\n        const diff = arrayDiff(newKeys, oldKeys)\n\n        // We only want to do stuff if items have changed\n        if (!diff.length && newKeys.length < oldKeys.length) return\n\n        // If nodes are removed we need to clear them from this.nodes\n        diff.forEach(k => delete this.nodes[k])\n\n        const oldSelectedCache = [...this.selectedCache]\n        this.selectedCache = new Set()\n        this.activeCache = new Set()\n        this.openCache = new Set()\n        this.buildTree(this.items)\n\n        // Only emit selected if selection has changed\n        // as a result of items changing. This fixes a\n        // potential double emit when selecting a node\n        // with dynamic children\n        if (!deepEqual(oldSelectedCache, [...this.selectedCache])) this.emitSelected()\n      },\n      deep: true,\n    },\n    active (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.activeCache, this.updateActive, this.emitActive)\n    },\n    value (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.selectedCache, this.updateSelected, this.emitSelected)\n    },\n    open (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.openCache, this.updateOpen, this.emitOpen)\n    },\n  },\n\n  created () {\n    const getValue = (key: string | number) => this.returnObject ? getObjectValueByPath(key, this.itemKey) : key\n\n    this.buildTree(this.items)\n\n    for (const value of this.value.map(getValue)) {\n      this.updateSelected(value, true, true)\n    }\n\n    for (const active of this.active.map(getValue)) {\n      this.updateActive(active, true)\n    }\n  },\n\n  mounted () {\n    // Save the developer from themselves\n    if (this.$slots.prepend || this.$slots.append) {\n      consoleWarn('The prepend and append slots require a slot-scope attribute', this)\n    }\n\n    if (this.openAll) {\n      this.updateAll(true)\n    } else {\n      this.open.forEach(key => this.updateOpen(this.returnObject ? getObjectValueByPath(key, this.itemKey) : key, true))\n      this.emitOpen()\n    }\n  },\n\n  methods: {\n    /** @public */\n    updateAll (value: boolean) {\n      Object.keys(this.nodes).forEach(key => this.updateOpen(getObjectValueByPath(this.nodes[key].item, this.itemKey), value))\n      this.emitOpen()\n    },\n    getKeys (items: any[], keys: any[] = []) {\n      for (let i = 0; i < items.length; i++) {\n        const key = getObjectValueByPath(items[i], this.itemKey)\n        keys.push(key)\n        const children = getObjectValueByPath(items[i], this.itemChildren)\n        if (children) {\n          keys.push(...this.getKeys(children))\n        }\n      }\n\n      return keys\n    },\n    buildTree (items: any[], parent: (string | number | null) = null) {\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i]\n        const key = getObjectValueByPath(item, this.itemKey)\n        const children = getObjectValueByPath(item, this.itemChildren, [])\n        const oldNode = this.nodes.hasOwnProperty(key) ? this.nodes[key] : {\n          isSelected: false, isIndeterminate: false, isActive: false, isOpen: false, vnode: null,\n        } as NodeState\n\n        const node: any = {\n          vnode: oldNode.vnode,\n          parent,\n          children: children.map((c: any) => getObjectValueByPath(c, this.itemKey)),\n          item,\n        }\n\n        this.buildTree(children, key)\n\n        // This fixed bug with dynamic children resetting selected parent state\n        if (!this.nodes.hasOwnProperty(key) && parent !== null && this.nodes.hasOwnProperty(parent)) {\n          node.isSelected = this.nodes[parent].isSelected\n        } else {\n          node.isSelected = oldNode.isSelected\n          node.isIndeterminate = oldNode.isIndeterminate\n        }\n\n        node.isActive = oldNode.isActive\n        node.isOpen = oldNode.isOpen\n\n        this.nodes[key] = node\n\n        if (children.length) {\n          const { isSelected, isIndeterminate } = this.calculateState(key, this.nodes)\n\n          node.isSelected = isSelected\n          node.isIndeterminate = isIndeterminate\n        }\n\n        // Don't forget to rebuild cache\n        if (this.nodes[key].isSelected && (this.selectionType === 'independent' || node.children.length === 0)) this.selectedCache.add(key)\n        if (this.nodes[key].isActive) this.activeCache.add(key)\n        if (this.nodes[key].isOpen) this.openCache.add(key)\n\n        this.updateVnodeState(key)\n      }\n    },\n    calculateState (node: string | number, state: Record<string | number, NodeState>) {\n      const children = state[node].children\n      const counts = children.reduce((counts: number[], child: string | number) => {\n        counts[0] += +Boolean(state[child].isSelected)\n        counts[1] += +Boolean(state[child].isIndeterminate)\n\n        return counts\n      }, [0, 0])\n\n      const isSelected = !!children.length && counts[0] === children.length\n      const isIndeterminate = !isSelected && (counts[0] > 0 || counts[1] > 0)\n\n      return {\n        isSelected,\n        isIndeterminate,\n      }\n    },\n    emitOpen () {\n      this.emitNodeCache('update:open', this.openCache)\n    },\n    emitSelected () {\n      this.emitNodeCache('input', this.selectedCache)\n    },\n    emitActive () {\n      this.emitNodeCache('update:active', this.activeCache)\n    },\n    emitNodeCache (event: string, cache: NodeCache) {\n      this.$emit(event, this.returnObject ? [...cache].map(key => this.nodes[key].item) : [...cache])\n    },\n    handleNodeCacheWatcher (value: any[], cache: NodeCache, updateFn: Function, emitFn: Function) {\n      value = this.returnObject ? value.map(v => getObjectValueByPath(v, this.itemKey)) : value\n      const old = [...cache]\n      if (deepEqual(old, value)) return\n\n      old.forEach(key => updateFn(key, false))\n      value.forEach(key => updateFn(key, true))\n\n      emitFn()\n    },\n    getDescendants (key: string | number, descendants: NodeArray = []) {\n      const children = this.nodes[key].children\n\n      descendants.push(...children)\n\n      for (let i = 0; i < children.length; i++) {\n        descendants = this.getDescendants(children[i], descendants)\n      }\n\n      return descendants\n    },\n    getParents (key: string | number) {\n      let parent = this.nodes[key].parent\n\n      const parents = []\n      while (parent !== null) {\n        parents.push(parent)\n        parent = this.nodes[parent].parent\n      }\n\n      return parents\n    },\n    register (node: VTreeviewNodeInstance) {\n      const key = getObjectValueByPath(node.item, this.itemKey)\n      this.nodes[key].vnode = node\n\n      this.updateVnodeState(key)\n    },\n    unregister (node: VTreeviewNodeInstance) {\n      const key = getObjectValueByPath(node.item, this.itemKey)\n      if (this.nodes[key]) this.nodes[key].vnode = null\n    },\n    isParent (key: string | number) {\n      return this.nodes[key].children && this.nodes[key].children.length\n    },\n    updateActive (key: string | number, isActive: boolean) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      if (!this.multipleActive) {\n        this.activeCache.forEach(active => {\n          this.nodes[active].isActive = false\n          this.updateVnodeState(active)\n          this.activeCache.delete(active)\n        })\n      }\n\n      const node = this.nodes[key]\n      if (!node) return\n\n      if (isActive) this.activeCache.add(key)\n      else this.activeCache.delete(key)\n\n      node.isActive = isActive\n\n      this.updateVnodeState(key)\n    },\n    updateSelected (key: string | number, isSelected: boolean, isForced = false) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      const changed = new Map()\n\n      if (this.selectionType !== 'independent') {\n        for (const descendant of this.getDescendants(key)) {\n          if (!getObjectValueByPath(this.nodes[descendant].item, this.itemDisabled) || isForced) {\n            this.nodes[descendant].isSelected = isSelected\n            this.nodes[descendant].isIndeterminate = false\n            changed.set(descendant, isSelected)\n          }\n        }\n\n        const calculated = this.calculateState(key, this.nodes)\n        this.nodes[key].isSelected = isSelected\n        this.nodes[key].isIndeterminate = calculated.isIndeterminate\n        changed.set(key, isSelected)\n\n        for (const parent of this.getParents(key)) {\n          const calculated = this.calculateState(parent, this.nodes)\n          this.nodes[parent].isSelected = calculated.isSelected\n          this.nodes[parent].isIndeterminate = calculated.isIndeterminate\n          changed.set(parent, calculated.isSelected)\n        }\n      } else {\n        this.nodes[key].isSelected = isSelected\n        this.nodes[key].isIndeterminate = false\n        changed.set(key, isSelected)\n      }\n\n      for (const [key, value] of changed.entries()) {\n        this.updateVnodeState(key)\n\n        if (this.selectionType === 'leaf' && this.isParent(key)) continue\n\n        value === true ? this.selectedCache.add(key) : this.selectedCache.delete(key)\n      }\n    },\n    updateOpen (key: string | number, isOpen: boolean) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      const node = this.nodes[key]\n      const children = getObjectValueByPath(node.item, this.itemChildren)\n\n      if (children && !children.length && node.vnode && !node.vnode.hasLoaded) {\n        node.vnode.checkChildren().then(() => this.updateOpen(key, isOpen))\n      } else if (children && children.length) {\n        node.isOpen = isOpen\n\n        node.isOpen ? this.openCache.add(key) : this.openCache.delete(key)\n\n        this.updateVnodeState(key)\n      }\n    },\n    updateVnodeState (key: string | number) {\n      const node = this.nodes[key]\n\n      if (node && node.vnode) {\n        node.vnode.isSelected = node.isSelected\n        node.vnode.isIndeterminate = node.isIndeterminate\n        node.vnode.isActive = node.isActive\n        node.vnode.isOpen = node.isOpen\n      }\n    },\n    isExcluded (key: string | number) {\n      return !!this.search && this.excludedItems.has(key)\n    },\n  },\n\n  render (h): VNode {\n    const children: VNodeChildrenArrayContents = this.items.length\n      ? this.items.filter(item => {\n        return !this.isExcluded(getObjectValueByPath(item, this.itemKey))\n      }).map(item => {\n        const genChild = VTreeviewNode.options.methods.genChild.bind(this)\n\n        return genChild(item, getObjectValueByPath(item, this.itemDisabled))\n      })\n      /* istanbul ignore next */\n      : this.$slots.default! // TODO: remove type annotation with TS 3.2\n\n    return h('div', {\n      staticClass: 'v-treeview',\n      class: {\n        'v-treeview--hoverable': this.hoverable,\n        'v-treeview--dense': this.dense,\n        ...this.themeClasses,\n      },\n    }, children)\n  },\n})\n","import { render, staticRenderFns } from \"./Treeview.vue?vue&type=template&id=544d7e02&\"\nimport script from \"./Treeview.vue?vue&type=script&lang=js&\"\nexport * from \"./Treeview.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VTreeview } from 'vuetify/lib/components/VTreeview';\ninstallComponents(component, {VTreeview})\n","<!--\r\n    Author: Li Xinyi\r\n    Date Written: 6/10/2021\r\n-->\r\n<template>\r\n    <!-- <v-container fluid>\r\n        <v-row>\r\n            <v-col cols=\"6\">\r\n                testing\r\n            </v-col>\r\n            <v-col cols=\"6\">\r\n                testing\r\n            </v-col>\r\n        </v-row>\r\n        \r\n    </v-container> -->\r\n    <treeview></treeview>\r\n</template>\r\n\r\n<script>\r\nimport Treeview from '@/components/test/Treeview';\r\n// import CameraSelection from '@/components/test/CameraSelection';\r\n// import TestCamera from '@/components/test/TestCamera';\r\n// import TestLogs from '@/components/test/TestLogs';\r\n\r\nexport default {\r\n    name: 'Test',\r\n    \r\n    components: {\r\n        Treeview,\r\n        // CameraSelection,\r\n        // TestCamera,\r\n        // TestLogs,\r\n    },\r\n\r\n};\r\n</script>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Test.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Test.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Test.vue?vue&type=template&id=6277751b&\"\nimport script from \"./Test.vue?vue&type=script&lang=js&\"\nexport * from \"./Test.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar sameValue = require('../internals/same-value');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\n// @@search logic\nfixRegExpWellKnownSymbolLogic('search', 1, function (SEARCH, nativeSearch, maybeCallNative) {\n  return [\n    // `String.prototype.search` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.search\n    function search(regexp) {\n      var O = requireObjectCoercible(this);\n      var searcher = regexp == undefined ? undefined : regexp[SEARCH];\n      return searcher !== undefined ? searcher.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));\n    },\n    // `RegExp.prototype[@@search]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@search\n    function (regexp) {\n      var res = maybeCallNative(nativeSearch, regexp, this);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n\n      var previousLastIndex = rx.lastIndex;\n      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;\n      var result = regExpExec(rx, S);\n      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;\n      return result === null ? -1 : result.index;\n    }\n  ];\n});\n"],"sourceRoot":""}