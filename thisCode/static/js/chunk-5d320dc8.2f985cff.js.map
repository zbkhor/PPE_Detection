{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.set.js","webpack:///./src/views/Test.vue?e02d","webpack:///./src/components/test/CameraSelection.vue?83a4","webpack:///src/components/test/CameraSelection.vue","webpack:///./src/components/test/CameraSelection.vue?b046","webpack:///../../../src/components/VTreeview/VTreeviewNode.ts","webpack:///../../../../src/components/VTreeview/util/filterTreeItems.ts","webpack:///../../../src/components/VTreeview/VTreeview.ts","webpack:///./src/components/test/CameraSelection.vue","webpack:///src/views/Test.vue","webpack:///./src/views/Test.vue?cdd1","webpack:///./src/views/Test.vue","webpack:///./node_modules/core-js/modules/es.string.search.js"],"names":["collection","collectionStrong","module","exports","init","this","arguments","length","undefined","_vm","_h","$createElement","_c","_self","attrs","staticRenderFns","staticClass","_m","ref","myVideoSources","on","changeMedia","model","value","callback","$$v","selectedVideoSource","expression","_v","baseMixins","mixins","VTreeviewNodeProps","activatable","activeClass","type","default","color","expandIcon","indeterminateIcon","itemChildren","itemDisabled","itemKey","itemText","loadChildren","loadingIcon","offIcon","onIcon","openOnClick","rounded","selectable","selectedColor","shaped","transition","selectionType","validator","v","includes","VTreeviewNode","name","inject","treeview","props","level","item","parentIsDisabled","data","hasLoaded","isActive","isIndeterminate","isLoading","isOpen","isSelected","computed","disabled","key","children","child","text","scopedProps","leaf","selected","indeterminate","active","open","computedIcon","hasChildren","created","beforeDestroy","methods","checkChildren","Promise","resolve","genLabel","$scopedSlots","label","slot","genPrependSlot","prepend","genAppendSlot","append","genContent","genToggle","VIcon","class","click","e","genCheckbox","genLevel","genNode","setTextColor","genChild","scopedSlots","genChildrenWrapper","map","c","genTransition","render","h","String","search","filter","match","i","filterTreeItems","excluded","provide","dense","hoverable","items","multipleActive","openAll","returnObject","activeCache","nodes","openCache","selectedCache","Set","excludedItems","watch","handler","oldKeys","Object","k","newKeys","getKeys","diff","oldSelectedCache","emitSelected","deep","getValue","mounted","$slots","updateAll","keys","buildTree","parent","oldNode","hasOwnProperty","vnode","node","calculateState","add","state","counts","Boolean","emitOpen","emitActive","emitNodeCache","handleNodeCacheWatcher","old","updateFn","emitFn","getDescendants","descendants","getParents","parents","register","unregister","isParent","updateActive","delete","updateSelected","isForced","changed","descendant","calculated","updateOpen","updateVnodeState","isExcluded","has","themeClasses","component","VTreeview","VCol","VContainer","fixRegExpWellKnownSymbolLogic","anObject","requireObjectCoercible","sameValue","regExpExec","SEARCH","nativeSearch","maybeCallNative","regexp","O","searcher","call","RegExp","res","done","rx","S","previousLastIndex","lastIndex","result","index"],"mappings":"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","file":"js/chunk-5d320dc8.2f985cff.js","sourcesContent":["'use strict';\nvar collection = require('../internals/collection');\nvar collectionStrong = require('../internals/collection-strong');\n\n// `Set` constructor\n// https://tc39.github.io/ecma262/#sec-set-objects\nmodule.exports = collection('Set', function (init) {\n  return function Set() { return init(this, arguments.length ? arguments[0] : undefined); };\n}, collectionStrong);\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',{attrs:{\"fluid\":\"\"}},[_c('v-col',{attrs:{\"cols\":\"3\"}},[_c('camera-selection')],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"px-8 py-5 text-left\"},[_vm._m(0),_c('div',[_c('div',{attrs:{\"id\":\"mediaInnerContainer\"}},[_c('v-treeview',{ref:\"videoSource\",attrs:{\"items\":_vm.myVideoSources,\"item-text\":\"deviceName\",\"item-value\":\"deviceId\",\"label\":\"Video Source\",\"outlined\":\"\",\"dense\":\"\"},on:{\"change\":_vm.changeMedia},model:{value:(_vm.selectedVideoSource),callback:function ($$v) {_vm.selectedVideoSource=$$v},expression:\"selectedVideoSource\"}})],1)])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"mb-4\"},[_c('span',{staticClass:\"font-weight-medium\",attrs:{\"id\":\"mediaText\"}},[_vm._v(\"Media Settings\")])])}]\n\nexport { render, staticRenderFns }","<!--\r\n    Author: Wang Wei Liang Matthew\r\n    Date Written: 10/08/2020\r\n-->\r\n<template>\r\n    <div class=\"px-8 py-5 text-left\">\r\n        <div class=\"mb-4\">\r\n            <span id=\"mediaText\" class=\"font-weight-medium\"\r\n                >Media Settings</span\r\n            >\r\n        </div>\r\n        <div>\r\n            <div id=\"mediaInnerContainer\">\r\n                <v-treeview\r\n                    v-model=\"selectedVideoSource\"\r\n                    :items=\"myVideoSources\"\r\n                    item-text=\"deviceName\"\r\n                    item-value=\"deviceId\"\r\n                    label=\"Video Source\"\r\n                    ref=\"videoSource\"\r\n                    outlined\r\n                    dense\r\n                    @change=\"changeMedia\"\r\n                >\r\n                </v-treeview>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'MediaSelection',\r\n    data() {\r\n        return {\r\n            //List of devices for v-select items prop\r\n            myVideoSources: [],\r\n            //Selected Devices\r\n            selectedVideoSource: null\r\n        };\r\n    },\r\n    props: ['devices'],\r\n    watch: {\r\n        //Update video constraints\r\n        devices: function() {\r\n            console.log('watch:devices: true');\r\n            this.gotDevices(this.devices);\r\n        }\r\n    },\r\n    methods: {\r\n        gotDevices(deviceInfos) {\r\n            console.log('gotDevices: true');\r\n            //console.log('deviceInfos: ' + JSON.stringify(deviceInfos));\r\n            let videoSources = [];\r\n            //console.log(JSON.stringify(deviceInfos));\r\n            // Get media sources (Video)\r\n            // Handles being called several times to update labels. Preserve values.\r\n            const values = [this.selectedVideoSource];\r\n            // Populate media source lists with their respective media sources\r\n            for (let i = 0; i !== deviceInfos.length; ++i) {\r\n                const deviceInfo = deviceInfos[i];\r\n                let device = {};\r\n                device.deviceId = deviceInfo.deviceId;\r\n\r\n                if (deviceInfo.kind === 'videoinput') {\r\n                    //Video Input device\r\n                    device.deviceName =\r\n                        deviceInfo.label || `camera ${videoSources.length + 1}`;\r\n                    videoSources.push(device);\r\n                } else {\r\n                    console.log(\r\n                        'Some other kind of source/device: ',\r\n                        deviceInfo\r\n                    );\r\n                }\r\n                // Set lists for v-select items prop\r\n                this.myVideoSources = videoSources;\r\n                // Set selected value for v-select\r\n                // Set to previous id if exists\r\n                // else set to first one\r\n                let sources = [videoSources];\r\n                sources.forEach((source, index) => {\r\n                    //If the current selected source is present in the new list of sources,\r\n                    //the selected source will remain, i.e. not changed.\r\n                    if (source.some(x => x.deviceId === values[index])) {\r\n                        switch (index) {\r\n                            case 0:\r\n                                this.selectedVideoSource = values[index];\r\n                                break;\r\n                        }\r\n                    }\r\n                    //else if there is at least one source in the list,\r\n                    //the selected source is the first source in the list.\r\n                    else if (source.length > 0) {\r\n                        switch (index) {\r\n                            case 0:\r\n                                this.selectedVideoSource =\r\n                                    videoSources[0].deviceId;\r\n                                break;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }, //end gotDevices()\r\n        changeMedia() {\r\n            let media = [this.selectedVideoSource];\r\n            this.$emit('mediaReceived', media);\r\n        } //end changeMedia()\r\n    }\r\n};\r\n</script>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CameraSelection.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CameraSelection.vue?vue&type=script&lang=js&\"","// Components\nimport { VExpandTransition } from '../transitions'\nimport { VIcon } from '../VIcon'\nimport VTreeview from './VTreeview'\n\n// Mixins\nimport { inject as RegistrableInject } from '../../mixins/registrable'\nimport Colorable from '../../mixins/colorable'\n\n// Utils\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { getObjectValueByPath, createRange } from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeChildren, PropType } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\ntype VTreeViewInstance = InstanceType<typeof VTreeview>\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject('treeview')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  treeview: VTreeViewInstance\n}\n\nexport const VTreeviewNodeProps = {\n  activatable: Boolean,\n  activeClass: {\n    type: String,\n    default: 'v-treeview-node--active',\n  },\n  color: {\n    type: String,\n    default: 'primary',\n  },\n  expandIcon: {\n    type: String,\n    default: '$subgroup',\n  },\n  indeterminateIcon: {\n    type: String,\n    default: '$checkboxIndeterminate',\n  },\n  itemChildren: {\n    type: String,\n    default: 'children',\n  },\n  itemDisabled: {\n    type: String,\n    default: 'disabled',\n  },\n  itemKey: {\n    type: String,\n    default: 'id',\n  },\n  itemText: {\n    type: String,\n    default: 'name',\n  },\n  loadChildren: Function as PropType<(item: any) => Promise<void>>,\n  loadingIcon: {\n    type: String,\n    default: '$loading',\n  },\n  offIcon: {\n    type: String,\n    default: '$checkboxOff',\n  },\n  onIcon: {\n    type: String,\n    default: '$checkboxOn',\n  },\n  openOnClick: Boolean,\n  rounded: Boolean,\n  selectable: Boolean,\n  selectedColor: {\n    type: String,\n    default: 'accent',\n  },\n  shaped: Boolean,\n  transition: Boolean,\n  selectionType: {\n    type: String as PropType<'leaf' | 'independent'>,\n    default: 'leaf',\n    validator: (v: string) => ['leaf', 'independent'].includes(v),\n  },\n}\n\n/* @vue/component */\nconst VTreeviewNode = baseMixins.extend<options>().extend({\n  name: 'v-treeview-node',\n\n  inject: {\n    treeview: {\n      default: null,\n    },\n  },\n\n  props: {\n    level: Number,\n    item: {\n      type: Object,\n      default: () => null,\n    } as PropValidator<Record<string, unknown> | null>,\n    parentIsDisabled: Boolean,\n    ...VTreeviewNodeProps,\n  },\n\n  data: () => ({\n    hasLoaded: false,\n    isActive: false, // Node is selected (row)\n    isIndeterminate: false, // Node has at least one selected child\n    isLoading: false,\n    isOpen: false, // Node is open/expanded\n    isSelected: false, // Node is selected (checkbox)\n  }),\n\n  computed: {\n    disabled (): boolean {\n      return (\n        getObjectValueByPath(this.item, this.itemDisabled) ||\n        (this.parentIsDisabled && this.selectionType === 'leaf')\n      )\n    },\n    key (): string {\n      return getObjectValueByPath(this.item, this.itemKey)\n    },\n    children (): any[] | null {\n      const children = getObjectValueByPath(this.item, this.itemChildren)\n      return children && children.filter((child: any) => !this.treeview.isExcluded(getObjectValueByPath(child, this.itemKey)))\n    },\n    text (): string {\n      return getObjectValueByPath(this.item, this.itemText)\n    },\n    scopedProps (): object {\n      return {\n        item: this.item,\n        leaf: !this.children,\n        selected: this.isSelected,\n        indeterminate: this.isIndeterminate,\n        active: this.isActive,\n        open: this.isOpen,\n      }\n    },\n    computedIcon (): string {\n      if (this.isIndeterminate) return this.indeterminateIcon\n      else if (this.isSelected) return this.onIcon\n      else return this.offIcon\n    },\n    hasChildren (): boolean {\n      return !!this.children && (!!this.children.length || !!this.loadChildren)\n    },\n  },\n\n  created () {\n    this.treeview.register(this)\n  },\n\n  beforeDestroy () {\n    this.treeview.unregister(this)\n  },\n\n  methods: {\n    checkChildren (): Promise<void> {\n      return new Promise<void>(resolve => {\n        // TODO: Potential issue with always trying\n        // to load children if response is empty?\n        if (!this.children || this.children.length || !this.loadChildren || this.hasLoaded) return resolve()\n\n        this.isLoading = true\n        resolve(this.loadChildren(this.item))\n      }).then(() => {\n        this.isLoading = false\n        this.hasLoaded = true\n      })\n    },\n    open () {\n      this.isOpen = !this.isOpen\n      this.treeview.updateOpen(this.key, this.isOpen)\n      this.treeview.emitOpen()\n    },\n    genLabel () {\n      const children = []\n\n      if (this.$scopedSlots.label) children.push(this.$scopedSlots.label(this.scopedProps))\n      else children.push(this.text)\n\n      return this.$createElement('div', {\n        slot: 'label',\n        staticClass: 'v-treeview-node__label',\n      }, children)\n    },\n    genPrependSlot () {\n      if (!this.$scopedSlots.prepend) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__prepend',\n      }, this.$scopedSlots.prepend(this.scopedProps))\n    },\n    genAppendSlot () {\n      if (!this.$scopedSlots.append) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__append',\n      }, this.$scopedSlots.append(this.scopedProps))\n    },\n    genContent () {\n      const children = [\n        this.genPrependSlot(),\n        this.genLabel(),\n        this.genAppendSlot(),\n      ]\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__content',\n      }, children)\n    },\n    genToggle () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__toggle',\n        class: {\n          'v-treeview-node__toggle--open': this.isOpen,\n          'v-treeview-node__toggle--loading': this.isLoading,\n        },\n        slot: 'prepend',\n        on: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n\n            if (this.isLoading) return\n\n            this.checkChildren().then(() => this.open())\n          },\n        },\n      }, [this.isLoading ? this.loadingIcon : this.expandIcon])\n    },\n    genCheckbox () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__checkbox',\n        props: {\n          color: this.isSelected || this.isIndeterminate ? this.selectedColor : undefined,\n          disabled: this.disabled,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n\n            if (this.isLoading) return\n\n            this.checkChildren().then(() => {\n              // We nextTick here so that items watch in VTreeview has a chance to run first\n              this.$nextTick(() => {\n                this.isSelected = !this.isSelected\n                this.isIndeterminate = false\n\n                this.treeview.updateSelected(this.key, this.isSelected)\n                this.treeview.emitSelected()\n              })\n            })\n          },\n        },\n      }, [this.computedIcon])\n    },\n    genLevel (level: number) {\n      return createRange(level).map(() => this.$createElement('div', {\n        staticClass: 'v-treeview-node__level',\n      }))\n    },\n    genNode () {\n      const children = [this.genContent()]\n\n      if (this.selectable) children.unshift(this.genCheckbox())\n\n      if (this.hasChildren) {\n        children.unshift(this.genToggle())\n      } else {\n        children.unshift(...this.genLevel(1))\n      }\n\n      children.unshift(...this.genLevel(this.level))\n\n      return this.$createElement('div', this.setTextColor(this.isActive && this.color, {\n        staticClass: 'v-treeview-node__root',\n        class: {\n          [this.activeClass]: this.isActive,\n        },\n        on: {\n          click: () => {\n            if (this.openOnClick && this.hasChildren) {\n              this.checkChildren().then(this.open)\n            } else if (this.activatable && !this.disabled) {\n              this.isActive = !this.isActive\n              this.treeview.updateActive(this.key, this.isActive)\n              this.treeview.emitActive()\n            }\n          },\n        },\n      }), children)\n    },\n    genChild (item: any, parentIsDisabled: boolean) {\n      return this.$createElement(VTreeviewNode, {\n        key: getObjectValueByPath(item, this.itemKey),\n        props: {\n          activatable: this.activatable,\n          activeClass: this.activeClass,\n          item,\n          selectable: this.selectable,\n          selectedColor: this.selectedColor,\n          color: this.color,\n          expandIcon: this.expandIcon,\n          indeterminateIcon: this.indeterminateIcon,\n          offIcon: this.offIcon,\n          onIcon: this.onIcon,\n          loadingIcon: this.loadingIcon,\n          itemKey: this.itemKey,\n          itemText: this.itemText,\n          itemDisabled: this.itemDisabled,\n          itemChildren: this.itemChildren,\n          loadChildren: this.loadChildren,\n          transition: this.transition,\n          openOnClick: this.openOnClick,\n          rounded: this.rounded,\n          shaped: this.shaped,\n          level: this.level + 1,\n          selectionType: this.selectionType,\n          parentIsDisabled,\n        },\n        scopedSlots: this.$scopedSlots,\n      })\n    },\n    genChildrenWrapper () {\n      if (!this.isOpen || !this.children) return null\n\n      const children = [this.children.map(c => this.genChild(c, this.disabled))]\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__children',\n      }, children)\n    },\n    genTransition () {\n      return this.$createElement(VExpandTransition, [this.genChildrenWrapper()])\n    },\n  },\n\n  render (h): VNode {\n    const children: VNodeChildren = [this.genNode()]\n\n    if (this.transition) children.push(this.genTransition())\n    else children.push(this.genChildrenWrapper())\n\n    return h('div', {\n      staticClass: 'v-treeview-node',\n      class: {\n        'v-treeview-node--leaf': !this.hasChildren,\n        'v-treeview-node--click': this.openOnClick,\n        'v-treeview-node--disabled': this.disabled,\n        'v-treeview-node--rounded': this.rounded,\n        'v-treeview-node--shaped': this.shaped,\n        'v-treeview-node--selected': this.isSelected,\n      },\n      attrs: {\n        'aria-expanded': String(this.isOpen),\n      },\n    }, children)\n  },\n})\n\nexport default VTreeviewNode\n","import { getObjectValueByPath } from '../../../util/helpers'\nimport { TreeviewItemFunction } from 'vuetify/types'\n\nexport function filterTreeItem (item: object, search: string, textKey: string): boolean {\n  const text = getObjectValueByPath(item, textKey)\n\n  return text.toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) > -1\n}\n\nexport function filterTreeItems (\n  filter: TreeviewItemFunction,\n  item: any,\n  search: string,\n  idKey: string,\n  textKey: string,\n  childrenKey: string,\n  excluded: Set<string | number>\n): boolean {\n  if (filter(item, search, textKey)) {\n    return true\n  }\n\n  const children = getObjectValueByPath(item, childrenKey)\n\n  if (children) {\n    let match = false\n    for (let i = 0; i < children.length; i++) {\n      if (filterTreeItems(filter, children[i], search, idKey, textKey, childrenKey, excluded)) {\n        match = true\n      }\n    }\n\n    if (match) return true\n  }\n\n  excluded.add(getObjectValueByPath(item, idKey))\n\n  return false\n}\n","// Styles\nimport './VTreeview.sass'\n\n// Types\nimport { VNode, VNodeChildrenArrayContents, PropType } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { TreeviewItemFunction } from 'vuetify/types'\n\n// Components\nimport VTreeviewNode, { VTreeviewNodeProps } from './VTreeviewNode'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utils\nimport {\n  arrayDiff,\n  deepEqual,\n  getObjectValueByPath,\n} from '../../util/helpers'\nimport mixins from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\nimport {\n  filterTreeItems,\n  filterTreeItem,\n} from './util/filterTreeItems'\n\ntype VTreeviewNodeInstance = InstanceType<typeof VTreeviewNode>\n\ntype NodeCache = Set<string | number>\ntype NodeArray = (string | number)[]\n\ntype NodeState = {\n  parent: number | string | null\n  children: (number | string)[]\n  vnode: VTreeviewNodeInstance | null\n  isActive: boolean\n  isSelected: boolean\n  isIndeterminate: boolean\n  isOpen: boolean\n  item: any\n}\n\nexport default mixins(\n  RegistrableProvide('treeview'),\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-treeview',\n\n  provide (): object {\n    return { treeview: this }\n  },\n\n  props: {\n    active: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<NodeArray>,\n    dense: Boolean,\n    filter: Function as PropType<TreeviewItemFunction>,\n    hoverable: Boolean,\n    items: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<any[]>,\n    multipleActive: Boolean,\n    open: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<NodeArray>,\n    openAll: Boolean,\n    returnObject: {\n      type: Boolean,\n      default: false, // TODO: Should be true in next major\n    },\n    search: String,\n    value: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<NodeArray>,\n    ...VTreeviewNodeProps,\n  },\n\n  data: () => ({\n    level: -1,\n    activeCache: new Set() as NodeCache,\n    nodes: {} as Record<string | number, NodeState>,\n    openCache: new Set() as NodeCache,\n    selectedCache: new Set() as NodeCache,\n  }),\n\n  computed: {\n    excludedItems (): Set<string | number> {\n      const excluded = new Set<string|number>()\n\n      if (!this.search) return excluded\n\n      for (let i = 0; i < this.items.length; i++) {\n        filterTreeItems(\n          this.filter || filterTreeItem,\n          this.items[i],\n          this.search,\n          this.itemKey,\n          this.itemText,\n          this.itemChildren,\n          excluded\n        )\n      }\n\n      return excluded\n    },\n  },\n\n  watch: {\n    items: {\n      handler () {\n        const oldKeys = Object.keys(this.nodes).map(k => getObjectValueByPath(this.nodes[k].item, this.itemKey))\n        const newKeys = this.getKeys(this.items)\n        const diff = arrayDiff(newKeys, oldKeys)\n\n        // We only want to do stuff if items have changed\n        if (!diff.length && newKeys.length < oldKeys.length) return\n\n        // If nodes are removed we need to clear them from this.nodes\n        diff.forEach(k => delete this.nodes[k])\n\n        const oldSelectedCache = [...this.selectedCache]\n        this.selectedCache = new Set()\n        this.activeCache = new Set()\n        this.openCache = new Set()\n        this.buildTree(this.items)\n\n        // Only emit selected if selection has changed\n        // as a result of items changing. This fixes a\n        // potential double emit when selecting a node\n        // with dynamic children\n        if (!deepEqual(oldSelectedCache, [...this.selectedCache])) this.emitSelected()\n      },\n      deep: true,\n    },\n    active (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.activeCache, this.updateActive, this.emitActive)\n    },\n    value (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.selectedCache, this.updateSelected, this.emitSelected)\n    },\n    open (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.openCache, this.updateOpen, this.emitOpen)\n    },\n  },\n\n  created () {\n    const getValue = (key: string | number) => this.returnObject ? getObjectValueByPath(key, this.itemKey) : key\n\n    this.buildTree(this.items)\n\n    for (const value of this.value.map(getValue)) {\n      this.updateSelected(value, true, true)\n    }\n\n    for (const active of this.active.map(getValue)) {\n      this.updateActive(active, true)\n    }\n  },\n\n  mounted () {\n    // Save the developer from themselves\n    if (this.$slots.prepend || this.$slots.append) {\n      consoleWarn('The prepend and append slots require a slot-scope attribute', this)\n    }\n\n    if (this.openAll) {\n      this.updateAll(true)\n    } else {\n      this.open.forEach(key => this.updateOpen(this.returnObject ? getObjectValueByPath(key, this.itemKey) : key, true))\n      this.emitOpen()\n    }\n  },\n\n  methods: {\n    /** @public */\n    updateAll (value: boolean) {\n      Object.keys(this.nodes).forEach(key => this.updateOpen(getObjectValueByPath(this.nodes[key].item, this.itemKey), value))\n      this.emitOpen()\n    },\n    getKeys (items: any[], keys: any[] = []) {\n      for (let i = 0; i < items.length; i++) {\n        const key = getObjectValueByPath(items[i], this.itemKey)\n        keys.push(key)\n        const children = getObjectValueByPath(items[i], this.itemChildren)\n        if (children) {\n          keys.push(...this.getKeys(children))\n        }\n      }\n\n      return keys\n    },\n    buildTree (items: any[], parent: (string | number | null) = null) {\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i]\n        const key = getObjectValueByPath(item, this.itemKey)\n        const children = getObjectValueByPath(item, this.itemChildren, [])\n        const oldNode = this.nodes.hasOwnProperty(key) ? this.nodes[key] : {\n          isSelected: false, isIndeterminate: false, isActive: false, isOpen: false, vnode: null,\n        } as NodeState\n\n        const node: any = {\n          vnode: oldNode.vnode,\n          parent,\n          children: children.map((c: any) => getObjectValueByPath(c, this.itemKey)),\n          item,\n        }\n\n        this.buildTree(children, key)\n\n        // This fixed bug with dynamic children resetting selected parent state\n        if (!this.nodes.hasOwnProperty(key) && parent !== null && this.nodes.hasOwnProperty(parent)) {\n          node.isSelected = this.nodes[parent].isSelected\n        } else {\n          node.isSelected = oldNode.isSelected\n          node.isIndeterminate = oldNode.isIndeterminate\n        }\n\n        node.isActive = oldNode.isActive\n        node.isOpen = oldNode.isOpen\n\n        this.nodes[key] = node\n\n        if (children.length) {\n          const { isSelected, isIndeterminate } = this.calculateState(key, this.nodes)\n\n          node.isSelected = isSelected\n          node.isIndeterminate = isIndeterminate\n        }\n\n        // Don't forget to rebuild cache\n        if (this.nodes[key].isSelected && (this.selectionType === 'independent' || node.children.length === 0)) this.selectedCache.add(key)\n        if (this.nodes[key].isActive) this.activeCache.add(key)\n        if (this.nodes[key].isOpen) this.openCache.add(key)\n\n        this.updateVnodeState(key)\n      }\n    },\n    calculateState (node: string | number, state: Record<string | number, NodeState>) {\n      const children = state[node].children\n      const counts = children.reduce((counts: number[], child: string | number) => {\n        counts[0] += +Boolean(state[child].isSelected)\n        counts[1] += +Boolean(state[child].isIndeterminate)\n\n        return counts\n      }, [0, 0])\n\n      const isSelected = !!children.length && counts[0] === children.length\n      const isIndeterminate = !isSelected && (counts[0] > 0 || counts[1] > 0)\n\n      return {\n        isSelected,\n        isIndeterminate,\n      }\n    },\n    emitOpen () {\n      this.emitNodeCache('update:open', this.openCache)\n    },\n    emitSelected () {\n      this.emitNodeCache('input', this.selectedCache)\n    },\n    emitActive () {\n      this.emitNodeCache('update:active', this.activeCache)\n    },\n    emitNodeCache (event: string, cache: NodeCache) {\n      this.$emit(event, this.returnObject ? [...cache].map(key => this.nodes[key].item) : [...cache])\n    },\n    handleNodeCacheWatcher (value: any[], cache: NodeCache, updateFn: Function, emitFn: Function) {\n      value = this.returnObject ? value.map(v => getObjectValueByPath(v, this.itemKey)) : value\n      const old = [...cache]\n      if (deepEqual(old, value)) return\n\n      old.forEach(key => updateFn(key, false))\n      value.forEach(key => updateFn(key, true))\n\n      emitFn()\n    },\n    getDescendants (key: string | number, descendants: NodeArray = []) {\n      const children = this.nodes[key].children\n\n      descendants.push(...children)\n\n      for (let i = 0; i < children.length; i++) {\n        descendants = this.getDescendants(children[i], descendants)\n      }\n\n      return descendants\n    },\n    getParents (key: string | number) {\n      let parent = this.nodes[key].parent\n\n      const parents = []\n      while (parent !== null) {\n        parents.push(parent)\n        parent = this.nodes[parent].parent\n      }\n\n      return parents\n    },\n    register (node: VTreeviewNodeInstance) {\n      const key = getObjectValueByPath(node.item, this.itemKey)\n      this.nodes[key].vnode = node\n\n      this.updateVnodeState(key)\n    },\n    unregister (node: VTreeviewNodeInstance) {\n      const key = getObjectValueByPath(node.item, this.itemKey)\n      if (this.nodes[key]) this.nodes[key].vnode = null\n    },\n    isParent (key: string | number) {\n      return this.nodes[key].children && this.nodes[key].children.length\n    },\n    updateActive (key: string | number, isActive: boolean) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      if (!this.multipleActive) {\n        this.activeCache.forEach(active => {\n          this.nodes[active].isActive = false\n          this.updateVnodeState(active)\n          this.activeCache.delete(active)\n        })\n      }\n\n      const node = this.nodes[key]\n      if (!node) return\n\n      if (isActive) this.activeCache.add(key)\n      else this.activeCache.delete(key)\n\n      node.isActive = isActive\n\n      this.updateVnodeState(key)\n    },\n    updateSelected (key: string | number, isSelected: boolean, isForced = false) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      const changed = new Map()\n\n      if (this.selectionType !== 'independent') {\n        for (const descendant of this.getDescendants(key)) {\n          if (!getObjectValueByPath(this.nodes[descendant].item, this.itemDisabled) || isForced) {\n            this.nodes[descendant].isSelected = isSelected\n            this.nodes[descendant].isIndeterminate = false\n            changed.set(descendant, isSelected)\n          }\n        }\n\n        const calculated = this.calculateState(key, this.nodes)\n        this.nodes[key].isSelected = isSelected\n        this.nodes[key].isIndeterminate = calculated.isIndeterminate\n        changed.set(key, isSelected)\n\n        for (const parent of this.getParents(key)) {\n          const calculated = this.calculateState(parent, this.nodes)\n          this.nodes[parent].isSelected = calculated.isSelected\n          this.nodes[parent].isIndeterminate = calculated.isIndeterminate\n          changed.set(parent, calculated.isSelected)\n        }\n      } else {\n        this.nodes[key].isSelected = isSelected\n        this.nodes[key].isIndeterminate = false\n        changed.set(key, isSelected)\n      }\n\n      for (const [key, value] of changed.entries()) {\n        this.updateVnodeState(key)\n\n        if (this.selectionType === 'leaf' && this.isParent(key)) continue\n\n        value === true ? this.selectedCache.add(key) : this.selectedCache.delete(key)\n      }\n    },\n    updateOpen (key: string | number, isOpen: boolean) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      const node = this.nodes[key]\n      const children = getObjectValueByPath(node.item, this.itemChildren)\n\n      if (children && !children.length && node.vnode && !node.vnode.hasLoaded) {\n        node.vnode.checkChildren().then(() => this.updateOpen(key, isOpen))\n      } else if (children && children.length) {\n        node.isOpen = isOpen\n\n        node.isOpen ? this.openCache.add(key) : this.openCache.delete(key)\n\n        this.updateVnodeState(key)\n      }\n    },\n    updateVnodeState (key: string | number) {\n      const node = this.nodes[key]\n\n      if (node && node.vnode) {\n        node.vnode.isSelected = node.isSelected\n        node.vnode.isIndeterminate = node.isIndeterminate\n        node.vnode.isActive = node.isActive\n        node.vnode.isOpen = node.isOpen\n      }\n    },\n    isExcluded (key: string | number) {\n      return !!this.search && this.excludedItems.has(key)\n    },\n  },\n\n  render (h): VNode {\n    const children: VNodeChildrenArrayContents = this.items.length\n      ? this.items.filter(item => {\n        return !this.isExcluded(getObjectValueByPath(item, this.itemKey))\n      }).map(item => {\n        const genChild = VTreeviewNode.options.methods.genChild.bind(this)\n\n        return genChild(item, getObjectValueByPath(item, this.itemDisabled))\n      })\n      /* istanbul ignore next */\n      : this.$slots.default! // TODO: remove type annotation with TS 3.2\n\n    return h('div', {\n      staticClass: 'v-treeview',\n      class: {\n        'v-treeview--hoverable': this.hoverable,\n        'v-treeview--dense': this.dense,\n        ...this.themeClasses,\n      },\n    }, children)\n  },\n})\n","import { render, staticRenderFns } from \"./CameraSelection.vue?vue&type=template&id=4b2cf3af&\"\nimport script from \"./CameraSelection.vue?vue&type=script&lang=js&\"\nexport * from \"./CameraSelection.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VTreeview } from 'vuetify/lib/components/VTreeview';\ninstallComponents(component, {VTreeview})\n","<!--\r\n    Author: Li Xinyi\r\n    Date Written: 6/10/2021\r\n-->\r\n<template>\r\n    <v-container fluid>\r\n        <v-col cols=\"3\">\r\n            <camera-selection></camera-selection>\r\n        </v-col>\r\n            \r\n        <!-- <v-row>\r\n            <v-col cols=\"4\">\r\n                <test-camera></test-camera>\r\n            </v-col>\r\n        </v-row> -->\r\n        \r\n    </v-container>\r\n</template>\r\n\r\n<script>\r\n// import Treeview from '@/components/test/Treeview';\r\nimport CameraSelection from '@/components/test/CameraSelection';\r\n// import TestCamera from '@/components/test/TestCamera';\r\n// import TestLogs from '@/components/test/TestLogs';\r\n\r\nexport default {\r\n    name: 'Test',\r\n    \r\n    components: {\r\n        // Treeview,\r\n        CameraSelection,\r\n        // TestCamera,\r\n        // TestLogs,\r\n    },\r\n\r\n};\r\n</script>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Test.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Test.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Test.vue?vue&type=template&id=69a92e17&\"\nimport script from \"./Test.vue?vue&type=script&lang=js&\"\nexport * from \"./Test.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VCol,VContainer})\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar sameValue = require('../internals/same-value');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\n// @@search logic\nfixRegExpWellKnownSymbolLogic('search', 1, function (SEARCH, nativeSearch, maybeCallNative) {\n  return [\n    // `String.prototype.search` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.search\n    function search(regexp) {\n      var O = requireObjectCoercible(this);\n      var searcher = regexp == undefined ? undefined : regexp[SEARCH];\n      return searcher !== undefined ? searcher.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));\n    },\n    // `RegExp.prototype[@@search]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@search\n    function (regexp) {\n      var res = maybeCallNative(nativeSearch, regexp, this);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n\n      var previousLastIndex = rx.lastIndex;\n      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;\n      var result = regExpExec(rx, S);\n      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;\n      return result === null ? -1 : result.index;\n    }\n  ];\n});\n"],"sourceRoot":""}